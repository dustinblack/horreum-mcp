name: container-build

on:
  push:
    branches: [main]
    paths:
      - 'Containerfile'
      - 'package.json'
      - 'package-lock.json'
      - 'src/**/*'
      - 'scripts/build_multiarch.sh'
      - '.github/workflows/container-build.yml'
  workflow_dispatch: {}

concurrency:
  group: container-${{ github.ref }}
  cancel-in-progress: true

env:
  IMAGE_REPO: ${{ vars.IMAGE_REPO }}
  OCI_REVISION: ${{ github.sha }}

jobs:
  build_and_push:
    name: Build and push multi-arch image
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      image_tag: ${{ steps.compute_tag.outputs.tag }}
    env:
      QUAY_USERNAME: ${{ secrets.QUAY_USERNAME }}
      QUAY_PASSWORD: ${{ secrets.QUAY_PASSWORD }}
    steps:
      - name: Check IMAGE_REPO configured
        run: |
          if [ -z "${IMAGE_REPO}" ]; then
            echo "Repository variable IMAGE_REPO is required (e.g., quay.io/<org>/horreum-mcp)" >&2
            exit 1
          fi
      - name: Checkout
        uses: actions/checkout@v4

      - name: Compute tag
        id: compute_tag
        run: echo "tag=${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"

      - name: Install buildah/podman/qemu
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends podman buildah qemu-user-static

      - name: Login to Quay.io (podman/buildah)
        if: env.QUAY_USERNAME != '' && env.QUAY_PASSWORD != ''
        run: |
          echo "$QUAY_PASSWORD" | podman login -u "$QUAY_USERNAME" --password-stdin quay.io
          echo "$QUAY_PASSWORD" | buildah login -u "$QUAY_USERNAME" --password-stdin quay.io

      - name: Enable binfmt (best-effort)
        run: |
          podman run --privileged --rm tonistiigi/binfmt --install all || true

      - name: Build and push
        env:
          TAG: ${{ steps.compute_tag.outputs.tag }}
        run: |
          bash scripts/build_multiarch.sh --tag "$TAG" --push --push-main

  trivy_scan:
    name: Trivy scan (image)
    needs: build_and_push
    runs-on: ubuntu-latest
    if: needs.build_and_push.result == 'success'
    steps:
      - name: Docker login (if needed)
        if: env.QUAY_USERNAME != '' && env.QUAY_PASSWORD != ''
        env:
          QUAY_USERNAME: ${{ secrets.QUAY_USERNAME }}
          QUAY_PASSWORD: ${{ secrets.QUAY_PASSWORD }}
        run: echo "$QUAY_PASSWORD" | docker login -u "$QUAY_USERNAME" --password-stdin quay.io

      - name: Trivy scan
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: ${{ env.IMAGE_REPO }}:${{ needs.build_and_push.outputs.image_tag }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
